# Cloud Build configuration for Content Pipeline
steps:
  # Build Content Pipeline container
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-content-pipeline'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/content-pipeline:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/content-pipeline:latest'
      - '-f'
      - 'Dockerfile.content-pipeline'
      - '.'
    timeout: '900s'

  # Push Content Pipeline image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-content-pipeline'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/content-pipeline'
    waitFor: ['build-content-pipeline']

  # Deploy Content Pipeline to Cloud Run (us-central1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-content-pipeline-central'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'content-pipeline'
      - '--image'
      - 'gcr.io/$PROJECT_ID/content-pipeline:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '900'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=tenxsom-ai-1631088'
      - '--set-secrets'
      - 'USEAPI_BEARER_TOKEN=useapi-bearer-token:latest'
      - '--set-secrets'
      - 'YOUTUBE_REFRESH_TOKEN=youtube-refresh-token-hub:latest'
      - '--service-account'
      - 'content-pipeline-manager@tenxsom-ai-1631088.iam.gserviceaccount.com'
    waitFor: ['push-content-pipeline']

  # Deploy Content Pipeline to Cloud Run (us-east1) - Multi-region
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-content-pipeline-east'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'content-pipeline'
      - '--image'
      - 'gcr.io/$PROJECT_ID/content-pipeline:$BUILD_ID'
      - '--region'
      - 'us-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '900'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=tenxsom-ai-1631088'
      - '--set-secrets'
      - 'USEAPI_BEARER_TOKEN=useapi-bearer-token:latest'
      - '--set-secrets'
      - 'YOUTUBE_REFRESH_TOKEN=youtube-refresh-token-hub:latest'
      - '--service-account'
      - 'content-pipeline-manager@tenxsom-ai-1631088.iam.gserviceaccount.com'
    waitFor: ['push-content-pipeline']

  # Build Platform Agents container
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-platform-agents'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/platform-agents:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/platform-agents:latest'
      - '-f'
      - 'Dockerfile.platform-agents'
      - '.'
    timeout: '600s'

  # Push Platform Agents image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-platform-agents'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/platform-agents'
    waitFor: ['build-platform-agents']

  # Deploy Platform Agents to Cloud Run (us-central1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-platform-agents-central'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'platform-agents'
      - '--image'
      - 'gcr.io/$PROJECT_ID/platform-agents:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '300'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=tenxsom-ai-1631088'
      - '--service-account'
      - 'content-pipeline-manager@tenxsom-ai-1631088.iam.gserviceaccount.com'
    waitFor: ['push-platform-agents']

  # Deploy Platform Agents to Cloud Run (us-east1) - Multi-region
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-platform-agents-east'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'platform-agents'
      - '--image'
      - 'gcr.io/$PROJECT_ID/platform-agents:$BUILD_ID'
      - '--region'
      - 'us-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '300'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '3'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=tenxsom-ai-1631088'
      - '--service-account'
      - 'content-pipeline-manager@tenxsom-ai-1631088.iam.gserviceaccount.com'
    waitFor: ['push-platform-agents']

  # Update Traffic Split for Load Balancing (optional)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'setup-traffic-split'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Multi-region deployment complete"
        echo "Services deployed to:"
        echo "  - us-central1 (primary)"
        echo "  - us-east1 (secondary)"
        echo ""
        echo "To set up global load balancing:"
        echo "  1. Create a Google Cloud Load Balancer"
        echo "  2. Add both regional endpoints as backends"
        echo "  3. Configure health checks and traffic distribution"

# Build timeout
timeout: '1800s'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Artifacts to store
images:
  - 'gcr.io/$PROJECT_ID/content-pipeline:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/content-pipeline:latest'
  - 'gcr.io/$PROJECT_ID/platform-agents:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/platform-agents:latest'